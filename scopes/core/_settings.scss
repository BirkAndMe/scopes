////
/// @group Settings
////

/// Default settings
$scope_settings_default: () !default;

/// On SCOPE_CREATE.
@function scope-settings-SCOPE_CREATE($settings: ()) {
  $settings: map-merge($scope_settings_default, $settings);

  $nop: scope-module-set(settings, $settings, map-get($settings, scope_name));
  @return true;
}
$nop: scope-module-on(SCOPE_CREATE, 'settings');

/// Get a scope setting.
@function scope-settings-get($setting, $scope_name: $__scope) {
  @return scope-module-get-variable(settings, $setting, false, $scope_name);
}

/// Set a scope setting.
@function scope-settings-set($setting, $value, $scope_name: $__scope) {
  @return scope-module-set-variable(settings, $setting, $value, $scope_name);
}
/// @alias scope-settings-set()
@mixin scope-settings-set($setting, $value: '') { $nop: scope-settings-set($setting, $value); }

///
@mixin scope-settings($settings) {
  $existing_settings: scope-module-get(settings);
  $existing_settings: map-merge($existing_settings, $settings);
  $nop: scope-module-set(settings, $existing_settings);
}
